"use strict";(self.webpackChunkcheatsheet=self.webpackChunkcheatsheet||[]).push([[7171],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,h=c(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,f=d["".concat(l,".").concat(u)]||d[u]||p[u]||o;return n?a.createElement(f,i(i({ref:t},h),{},{components:n})):a.createElement(f,i({ref:t},h))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8456:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},i="Caching",c={unversionedId:"Concepts/Frontend/Caching",id:"Concepts/Frontend/Caching",title:"Caching",description:"Types of Caching",source:"@site/docs/Concepts/Frontend/Caching.md",sourceDirName:"Concepts/Frontend",slug:"/Concepts/Frontend/Caching",permalink:"/cheatsheet/docs/Concepts/Frontend/Caching",draft:!1,editUrl:"https://github.com/niqiukun/cheatsheet/blob/master/docs/Concepts/Frontend/Caching.md",tags:[],version:"current",frontMatter:{},sidebar:"conceptsSidebar",next:{title:"HTTP",permalink:"/cheatsheet/docs/Concepts/Frontend/HTTP"}},l={},s=[{value:"Types of Caching",id:"types-of-caching",level:2},{value:"Private Caches",id:"private-caches",level:3},{value:"Shared Cache",id:"shared-cache",level:3},{value:"Cache Control",id:"cache-control",level:2},{value:"Validation",id:"validation",level:2},{value:"If-Modified-Since",id:"if-modified-since",level:3},{value:"If-None-Match",id:"if-none-match",level:3}],h={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"caching"},"Caching"),(0,r.kt)("h2",{id:"types-of-caching"},"Types of Caching"),(0,r.kt)("h3",{id:"private-caches"},"Private Caches"),(0,r.kt)("p",null,"Private caches refer to caches that are private to a specific user and a client (such as a browser). Another user, or another client would not be able to access the cache. It can be set using the following response header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Cache-Control: private\n")),(0,r.kt)("p",null,"Note that response of requests with ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header cannot be cached (unless with ",(0,r.kt)("inlineCode",{parentName:"p"},"Cache-Control: public"),")."),(0,r.kt)("h3",{id:"shared-cache"},"Shared Cache"),(0,r.kt)("p",null,"A shared cache exists between the origin server and clients, usually in proxies or CDNs. Shared caches can be accessed by all users and clients."),(0,r.kt)("h2",{id:"cache-control"},"Cache Control"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Cache-Control: max-age=3600\n")),(0,r.kt)("p",null,"Cache expires after 1 hour, after which revalidation is required to use the cache. Expired caches can be used when offline without revalidation. To prevent this, use ",(0,r.kt)("inlineCode",{parentName:"p"},"Cache-Control: max-age=xxx, must-revalidate"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Cache-Control: no-store\n")),(0,r.kt)("p",null,"Do not store cache. However, existing cache stored remains unaffected."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Cache-Control: private\n")),(0,r.kt)("p",null,"Do not share the cache with others."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Cache-Control: no-cache\n")),(0,r.kt)("p",null,"Cache can be used but must always be revalidated with the server."),(0,r.kt)("h2",{id:"validation"},"Validation"),(0,r.kt)("p",null,"Validation is for the client to check with the server whether a cache can be reused. There are two ways for validation:"),(0,r.kt)("h3",{id:"if-modified-since"},"If-Modified-Since"),(0,r.kt)("p",null,"In the server response, the server gives a ",(0,r.kt)("inlineCode",{parentName:"p"},"Last-Modified")," value:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"HTTP/1.1 200 OK\n...\nDate: YYYYYY\nLast-Modified: XXXXXX\nCache-Control: max-age=3600\n")),(0,r.kt)("p",null,"Then, after the cache has expired, the client sends the following for validation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /index.html HTTP/1.1\n...\nIf-Modified-Since: XXXXXX\n")),(0,r.kt)("p",null,"The time should equal to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Last-Modified")," field in the previous response. If there has not been any modification since the specified time, the server responds ",(0,r.kt)("inlineCode",{parentName:"p"},"304 Not Modified")," and the client can safely reuse the cache."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"HTTP/1.1 304 Not Modified\n...\nDate: ZZZZZZ\nLast-Modified: XXXXXX\nCache-Control: max-age=3600\n")),(0,r.kt)("h3",{id:"if-none-match"},"If-None-Match"),(0,r.kt)("p",null,"In the server response, the server gives an ",(0,r.kt)("inlineCode",{parentName:"p"},"ETag")," value, which is typically a hash or a version number based on the content."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'HTTP/1.1 200 OK\n...\nDate: YYYYYY\nETag: "XXXXXX"\nCache-Control: max-age=3600\n')),(0,r.kt)("p",null,"Then, after the cache has expired, the client sends the following for validation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'GET /index.html HTTP/1.1\n...\nIf-None-Match: "XXXXXX"\n')),(0,r.kt)("p",null,"The tag should equal to the ",(0,r.kt)("inlineCode",{parentName:"p"},"ETag")," field in the previous response. If there has not been any modification and the ",(0,r.kt)("inlineCode",{parentName:"p"},"ETag")," did not change, the server responds ",(0,r.kt)("inlineCode",{parentName:"p"},"304 Not Modified")," and the client can safely reuse the cache."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'HTTP/1.1 304 Not Modified\n...\nDate: ZZZZZZ\nETag: "XXXXXX"\nCache-Control: max-age=3600\n')))}p.isMDXComponent=!0}}]);